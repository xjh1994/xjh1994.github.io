---
author: xjh1994
comments: true
date: 2013-04-23 04:56:11+00:00
layout: post
slug: '%e3%80%90linux%e3%80%91-%e6%96%87%e6%9c%ac%e7%bc%96%e8%be%91%e5%99%a8vim'
title: 【LINUX】 文本编辑器VIM
wordpress_id: 92
categories:
- Linux
tags:
- Linux
- vim
- 文本编辑器
---

Vim是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和Emacs并列成为类Unix系统用户最喜欢的编辑器。

**主要功能**


根据设定可以和原始vi完全兼容
多缓冲编辑
任意个数的分割窗口（横，竖）
具备列表和字典功能的脚本语言
可以在脚本中调用 Perl, Ruby, Python, Tcl, MzScheme
单词缩写功能
动态单词补完
多次撤销和重做
对应400种以上文本文件的语法高亮
C/C++, Perl, Java, Ruby, Python 等40种以上语言的自动缩排
利用ctags的标签中跳转
崩溃后文件恢复
光标位置和打开的缓冲状态的保存 复原（session功能）
可以对两个文件进行差分，同步功能的diff模式
远程文件编辑
Omni补完（上下文相关的补完）


一、我们为什么要学习vim编辑器？

Linux的命令行界面下面有非常多的文本编辑器。比如经常听说的就有Emacs、pico、nano、joe与vim等。vim可以看做是vi的高级版。我们为什么一定要学习vim呢？有以下几个原因：

(1)所有的Unix like系统都会内置vi文本编辑器，其他的文本编辑器则不一定会存在。

(2)很多软件的编辑接口都会主动调用vi。

(3)vim具有程序编辑的能力，可以主动以字体颜色辨别语法的正确性，方便程序设计。

(4)程序简单，编辑速度快。



二、下面先介绍一下vi的基本使用方法及其相关命令。



vim编辑器的三种模式：一般模式、编辑模式和命令行模式。

在一般模式中可以进行删除、复制和粘贴的功能，但是无法编辑文件内容。从一般模式切换到编辑模式可以按下i、I、o、O、a、A、r、R键。按下Esc键可以回到一般模式。在一般模式中输入：、/、？三个中的任意一个可以将光标移到最下面的一行。在这个模式中可以提供查找数据的操作，而读取、保存、大量替换字符、离开vii、显示行号等操作则是在此模式中完成的。需要注意的是，编辑模式与命令行模式之间是不能互相切换的。

下面列出平时用的最多的vi命令：

移动光标的方法：

[Ctrl]+[f]：屏幕向下移动一页，相当于[PageDown]按键。

[Ctrl]+[b]：屏幕向上移动一页，相当于[PageUp]按键。

0或功能键[Home]：移动到这一行的最前面字符处。

$或功能键[End]：移动到这一行的最后面字符处。

G：移动到这个文件的最后一行。

gg：移动到这个文件的第一行，相当于1G.

N[Enter]：N为数字，光标向下移动N行。

查找和替换：

/word：向下寻找一个名称为word的字符串。

?word：向上寻找一个名称为word的字符串。

:n1,n2s/word1/word2/g：在第n1行和n2行之间寻找word1这个字符串，并且将其替换为word2.

:1,$s/word1/word2/g：从第一行到最后一行寻找word1这个字符串，并且将其替换为word2.

:1,$s/word1/word2/gc：从第一行到最后一行寻找word1这个字符串，并且将其替换为word2.且在替换前显示提示字符给用户确认是否需要替换。

删除、复制和粘贴：

x,X：在一行字中，x为向后删除一个字符（相当于[Del]键），X为向前删除一个字符（相当于[Backspace]）。

dd：删除光标所在的一整行。

ndd：删除光标所在的向下n行。

yy：复制光标所在的一行。

nyy：复制光标所在的向下n行。

p,P：p为将已复制的内容在光标的下一行粘贴，P则为粘贴在光标的上一行。

u：复原前一个操作。

[Ctrl]+r：重做上一个操作。

.：小数点，重复前一个操作。

一般模式切换到编辑模式：

i,I：进入插入模式，i为从目前光标所在处插入。I为在目前所在行的第一个非空格字符处开始插入。

a，A：进入插入模式。a为从目前光标所在处的下一个字符处开始插入。A为从所在行的最后一个字符处开始插入。

o，O：进入插入模式。o为在下一行插入。O为在上一行插入。

r，R：进入替换模式。r只替换光标所在那个字符一次。R会一直替换光标所在字符，直到按下Esc键。

一般模式切换到命令行：

:w：将编辑的数据写入到硬盘中。

:q：离开vi.后面加！为强制离开。

:wq：保存后离开。:wq!为强制保存后离开。



目前主要的编辑器都有恢复功能，vim也不例外。vim是通过“保存”文件来挽回数据的。

每当我们在用vim编辑时，vim都会自动在被编辑的文件的目录下面再新建一个名为filename.swap的文件。这就是一个暂存文件，我们对文件filename所做的操作都会被记录到这个文件当中。如果系统意外崩溃，导致文件没有正常保存，那么这个暂存文件就会发挥作用。下面用一个例子来说明(Note：我用的是Ubuntu)。

打开终端，输入命令，将etc目录下面的manpath.config复制到tmp目录下面，并且更改当前工作目录为tmp：

cp /etc/manpath.config /tmp

cd /tmp

用vim编辑manpath.config文件：vim manpath.config。

我们在vim的一般模式下按下Ctrl+z组合键，vim就会被丢到后台执行。回到命令提示符环境后，我们模拟将vim的工作不正常中断。

kill -9 %1;强制杀死制定的进程。

这样导致暂存盘无法通过正常的流程结束，所以暂存文件不会消失，而是继续保留下来。当再次编辑那个文件时(输入命令vim manpath.config)，出现(ubuntu 11.10)：

![](http://hi.csdn.net/attachment/201112/4/0_1322998945AXt9.gif)

这时，有六个按钮可以使用：

O(pen for Read-Only):打开成只读文件。

E(dit):用正常方式打开要编辑的文件，并不会载入暂存文件的内容。这很容易出现两个用户相互改变对方的文件的问题。

R(ecover)：加载暂存文件的内容。

D(elete)：如果你确定这个暂存文件是没有用的，则可以删除。

Q(uit)：不进行任何操作，回到命令行。

A(bort)：忽略这个编辑行为，和Q类似。

需要注意的是：这个暂存文件不会应为你结束vim后自动删除，必须要手动删除。否则每次打开对应的文件时都会出现这样的提示。



三、vim的功能

【1】块选择：

这个功能可以让我们复制一个矩形区域的内容，十分方便。

v:字符选择，会将光标经过的地方反白选择；

V:行选择；

Ctrl+v：块选择；

y：复制反白的地方；

d：删除反白的地方。

示例如下：

![](http://hi.csdn.net/attachment/201112/4/0_1322999816u2L9.gif)

需要注意的是，粘贴时候也是粘贴在一个块的范围内，而不是以行为单位来处理的。

【2】多文件编辑

我们在两个或多个文件之间复制粘贴内容时，这个功能会让我们方便很多。

使用命令vim name1 name2 name3...(各个文件名之间用空格隔开)可以同时打开多个文件。

:n：编辑下一个文件；

:N：编辑上一个文件；

:files：列出目前vim打开的所有文件。

【3】多窗口功能

可以在一个窗口中打开多个文件。

输入命令:sp{filename}便可以实现这个功能。如果想要在新窗口启动另外一个文件，则加入文件名。如果省略文件名，则打开的是同一个文件。

用一个例子来说明。

vim manpath.config打开一个文件。在一般模式下输入:sp。发现打开的是同一个文件。如果再输入:sp /etc/hosts。则变成：

![](http://hi.csdn.net/attachment/201112/4/0_1323000544z0Dl.gif)

其他的按键功能：

Ctrl+w+j:先按下Ctrl不放，再按下w后放开所有的按键，再按下j(或向下箭头键)，则光标可以移到下方的窗口；

Ctrl+w+k：同上，不过光表移到上面的窗口；

Ctrl+w+q：离开。

【4】vim环境设置

需要注意的是，vim会将i我们的以前的行为都记录下来，以方便我们操作。它保存在文件：~/.viminfo中。

vim常用的环境设置参数命令如下：

:set nu  设置行号

:set nonu 取消行号

:set hlsearch 设置高亮度查找

:set nohlsearch 取消高亮度查找

:set backup 自动备份文件

:set ruler 开启右下角状态栏说明

:set showmode 显示左下角的INSERT之类的状态栏

:set backspace={0,1,2} 设置退格键功能。为2时可以删任意字符。为0或1时仅可以删除刚才输入的字符。

:set all 显示目前所有的环境参数值

:set 显示与系统默认值不同的参数值

:syntax on/off 是否开启依据相关程序语法显示不同的颜色

:set bg=dark/light 是否显示不同的颜色色调

但是我们没有必要每次使用vim都要重新设置一次各个参数值。我们可以通过配置文件来直接规定我们习惯的vim操作环境。整体vim的设置值一般是放在/etc/vimrc中的。我们一般不要修改这个文件。我们可以通过修改~/.vimrc这个文件，如果不存在，可以手动创建。然后将我们所希望的设置值写入。例如，我们可以这样写：








**[cpp][/cpp]** [view plain](http://blog.csdn.net/xiajun07061225/article/details/7039413#)[copy](http://blog.csdn.net/xiajun07061225/article/details/7039413#)[print](http://blog.csdn.net/xiajun07061225/article/details/7039413#)[?](http://blog.csdn.net/xiajun07061225/article/details/7039413#)












	
  1. vim ~/.vimrc

	
  2. set hlsearch（注意：set前面也可以加冒号，结果一样）

	
  3. set backspace=2

	
  4. set ruler

	
  5. set showmode

	
  6. set nu

	
  7. syntax on





创建并保存这个文件之后，当下次重新以vim编辑某个文件时，该文件的默认环境就是这么设置的。



如有错误，还请大家包含、指正。





转自[http://blog.csdn.net/xiajun07061225/article/details/7039413](http://blog.csdn.net/xiajun07061225/article/details/7039413)
